---
export const prerender = false;
import Layout from "../layouts/Layout.astro";
import LogOutButton from "../components/Buttons/LogOutButton";
import { type Customer } from "@/services/types";
import { getCustomerData } from "@/services/fetchData";
import ProfileIndex from "@/components/profile/ProfileIndex";

const session = Astro.cookies.get("check");

if (session == undefined) {
  return Astro.redirect("/login");
}

const customer: Customer = await getCustomerData(session.value);
---

<Layout title="Perfil | VIGI">
  <section class="p-4 sm:p-8 max-w-[1180px] m-auto">
    <article class="flex justify-between">
      <div class="flex items-center gap-5">
        <div class="relative inline-block">
          <input
            type="file"
            id="fileInput"
            accept="image/*"
            class="absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer"
          />
          <label id="profilePictureLabel" for="fileInput">
            <img
              id="profilePicture"
              class="h-20 w-20 sm:h-28 sm:w-28 object-cover rounded-full"
              title=`Imagen de perfil de ${customer.user_data.name}`
              src=`${customer.profile_image || "/avatar.png"}`
              alt=`Imagen de perfil de ${customer.user_data.name}`
            />
          </label>
        </div>
        <span class="text-primary font-bold text-lg"
          >Â¡Hola {customer.user_data.name}!</span
        >
      </div>
      <LogOutButton client:visible />
    </article>
    <ProfileIndex client:visible customer={customer} />
  </section>
</Layout>

<style>
  #profilePictureLabel::after {
    content: "Cambiar imagen";
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    padding: 5px 10px;
    border-radius: 5px;
    opacity: 0;
    transition: opacity 0.3s ease;
    cursor: pointer;
    font-size: x-small;
  }

  #profilePictureLabel:hover::after {
    opacity: 1;
  }
</style>

<script>
  import { uploadFile } from "@/services/fetchData";
  import { getToken } from "@/services/scripts";

  document
    .getElementById("fileInput")!
    .addEventListener("change", async (event) => {
      const file = (event.target as HTMLInputElement).files![0];
      if (file) {
        const formData = new FormData();
        formData.append("file", file);

        const token = getToken();
        const res = await uploadFile(token, formData);

        if (res.success) {
          const reader = new FileReader();
          reader.onload = function (event) {
            const imgElement = document.getElementById("profilePicture") as HTMLImageElement;
            if (imgElement) {
              imgElement.src = event.target?.result as string;
            }
          };
          reader.readAsDataURL(file);
        }
      }
    });
</script>
