---
import Layout from "../layouts/Layout.astro";
import { getCartData } from "../services/fetchData";
import { type CartItem } from "../services/types";
import QuantitySelect from "../components/Buttons/QuantitySelect";
import Sad from "../components/Icons/Sad.astro";
import DeleteItemButton from "../components/Buttons/DeleteItemButton";
import PayCartButton from "../components/PayCartButton";

export const prerender = false;

const token = Astro.cookies.get("check")

let cart;
if(token == undefined){
  return Astro.redirect('/login')
  // cart = {items: [], products_total: 0, amount_to_pay: 0};
} else {
  cart = await getCartData(token.value);
}
---
<Layout title={`Cart (${cart.products_total}) | VIGI`}>
  <main class="p-4 sm:px-8 max-w-[1180px] m-auto">
    <div class="sm:py-3 sm:w-[550px] lg:w-[600px] 2xl:w-[750px]">
      <h2
        class="text-primary font-bold mt-1 mb-3 text-base sm:text-2xl 2xl:text-3xl"
      >
        Carrito.<span class="text-black font-normal"> Â¡Ya casi es tuyo!</span>
      </h2>
    </div>

    <section class="flex flex-col sm:flex-row gap-5 justify-between">
      <article class="w-full">
        <h3 class="text-primary font-bold my-1 text-base">Productos</h3>
        <div class="flex flex-col gap-4">
          {
           cart.items.length > 0 ? cart.items.map((product: CartItem) => (
              <div class="flex justify-between p-2 rounded border-2">
                <div class="flex flex-col sm:flex-row items-center gap-4">
                  <img
                    src={product.picture_url}
                    alt={product.title}
                    class="w-20 h-20 sm:w-32 sm:h-32"
                  />
                  <div class="flex flex-col gap-2">
                    <h4 class="text-primary font-bold text-base sm:text-2xl 2xl:text-3xl">
                      {product.title}
                    </h4>
                    <p
                      class="text-black
                    text-base sm:text-lg 2xl:text-xl"
                    >
                      {product.unit_price.toLocaleString("es-AR", {
                        style: "currency",
                        currency: "ARS",
                        minimumFractionDigits: 0,
                      })}
                    </p>
                  </div>
                </div>
                <div class="flex flex-col justify-evenly px-3">
                  <span class="bg-primary text-white p-2 rounded">
                    Unidades: <strong>{`${product.quantity}`}</strong>
                  </span>
                  {/* <QuantitySelect id={product.id}/> Hardcode id */}
                  <DeleteItemButton
                    client:visible
                    product_id={product.id}
                  />
                </div>
              </div>
            )) : (
              <div class="border p-3 rounded-lg flex flex-col justify-center items-center gap-2">
                <Sad />
                <span class="text-base">No hay productos en el carrito</span>
              </div>
            )
          }
        </div>
      </article>
      <article class="w-full sm:w-3/4">
        <h3 class="text-primary font-bold my-1 text-base">Resumen</h3>
        <div class="flex">
          <table class="bg-gray-200 rounded-lg w-full">
            <tr>
              <th class="text-center text-xs">Producto</th>
              <th class="text-center text-xs">Precio por unidad</th>
              <th class="text-center text-xs">Unidades</th>
              <th class="text-center text-xs">Subtotal</th>
            </tr>
              {
                cart.items.map((product: CartItem) => {
                  return (
                    <tr>
                      <td class="text-center">{product.title}</td>
                      <td class="text-center">{product.unit_price.toLocaleString("es-AR", {
                        style: "currency",
                        currency: "ARS",
                        minimumFractionDigits: 0,
                      })}</td>
                      <td class="text-center">{product.quantity}</td>
                      <td class="text-center">{(product.quantity * product.unit_price).toLocaleString("es-AR",{
                        style: "currency",
                        currency: "ARS",
                        minimumFractionDigits: 0,
                      })}</td>
                    </tr>
                  );
                })
              }
              <tr>
                <td class="text-center font-bold">Total:</td>
                <td></td>
                <td class="text-center font-bold">{cart.products_total}</td>
                <td class="text-center font-bold">{cart.amount_to_pay.toLocaleString("es-AR",{
                  style: "currency",
                  currency: "ARS",
                  minimumFractionDigits: 0,
                })}</td>
              </tr>
          </table>
        </div>
        <PayCartButton client:visible cart={cart}/>
      </article>
    </section>
  </main>
</Layout>

<style>
  table {;
    width: 100%;
    border-collapse: collapse;
  }

  th, td {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1) ;
    padding: 7px;
  }
</style>
